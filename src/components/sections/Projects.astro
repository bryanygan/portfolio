---
import Section from '../ui/Section.astro';
import Card from '../ui/Card.astro';
import Button from '../ui/Button.astro';

interface Project {
  title: string;
  description: string;
  image: string;
  tags: string[];
  liveUrl?: string;
  repoUrl?: string;
  isInternal?: boolean;
}

const projects: Project[] = [
  {
    title: 'Banking System',
    description: 'Interactive banking simulator with OOP design patterns, command-driven architecture, and comprehensive testing. Built with TypeScript + React, featuring 151 passing tests and educational documentation.',
    image: '/assets/images/projects/bankingsystem.webp',
    tags: ['TypeScript', 'React', 'Vitest', 'OOP', 'Design Patterns'],
    liveUrl: '/banking-system',
    repoUrl: 'https://github.com/bryanygan/bankingsystem',
    isInternal: true,
  },
  {
    title: 'MunchMatch',
    description: 'Built a responsive web app that recommends meals based on user flavor preferences, contributing to both front-end design and Agile team development.',
    image: '/assets/images/projects/munchmatch.webp',
    tags: ['HTML', 'CSS', 'JavaScript', 'GitLab', 'Agile'],
    liveUrl: 'https://munchmatch.bryangan.com',
    repoUrl: 'https://github.com/bryanygan/munchmatch'


  },
  {
    title: 'Discord Bots',
    description: 'Developed a suite of Discord automation bots designed for community management and workflow optimization: email/promo scraping, point tracking, channel status management, and streamlined food ordering with payment processing.',
    image: '/assets/images/projects/discbot.webp',
    tags: ['JavaScript', 'Node.js', 'Python', 'Databases', 'HTML'],
    liveUrl: 'https://bryangan.com/bots',
    isInternal: true,
  }
];
---

<Section id="projects" title="Projects" subtitle="My best recent work and projects.">
  <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
    {
      projects.map((project) => (
        <Card hover={true} class="overflow-hidden h-full flex flex-col">
          <div class="h-48 overflow-hidden">
            <img src={project.image} alt={project.title} class="w-full h-full object-cover" loading="lazy" />
          </div>
          <div class="p-6 flex-grow flex flex-col">
            <h3 class="text-xl font-bold mb-2">{project.title}</h3>
            <p class="text-gray-600 dark:text-gray-300 text-sm mb-4">{project.description}</p>
            
            <div class="mt-auto">
              <div class="flex flex-wrap gap-2 mb-4">
                {project.tags.map((tag) => (
                  <span class="px-2 py-1 text-xs font-medium bg-primary/10 text-primary rounded-md">
                    {tag}
                  </span>
                ))}
              </div>
              
              <div class="flex gap-3">
                {project.liveUrl && (
                  <Button href={project.liveUrl} variant="outline" target={project.isInternal ? undefined : "_blank"} size="lg">
                    View Project
                  </Button>
                )}
                {project.repoUrl && (
                  <Button href={project.repoUrl} target="_blank" variant="outline" size="lg">
                    Code
                  </Button>
                )}
              </div>
            </div>
          </div>
        </Card>
      ))
    }
  </div>
</Section> 